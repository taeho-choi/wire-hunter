//
// Generated by Microsoft (R) HLSL Shader Compiler 10.0.10011.16384
//
//
// Buffer Definitions: 
//
// cbuffer $Globals
// {
//
//   float MaxGlobalDistance;           // Offset:    0 Size:     4 [unused]
//   float4 GlobalVolumeCenterAndExtent[4];// Offset:   16 Size:    64 [unused]
//   float4 GlobalVolumeWorldToUVAddAndMul[4];// Offset:   80 Size:    64 [unused]
//   float GlobalVolumeDimension;       // Offset:  144 Size:     4 [unused]
//   float GlobalVolumeTexelSize;       // Offset:  148 Size:     4 [unused]
//   uint EmitterTickCounter;           // Offset:  152 Size:     4
//   int4 EmitterSpawnInfoOffsets[2];   // Offset:  160 Size:    32
//   float4 EmitterSpawnInfoParams[8];  // Offset:  192 Size:   128
//   uint SpawnedInstances;             // Offset:  320 Size:     4
//   uint UpdateStartInstance;          // Offset:  324 Size:     4
//   int DefaultSimulationStageIndex;   // Offset:  328 Size:     4 [unused]
//   int SimulationStageIndex;          // Offset:  332 Size:     4 [unused]
//   int IterationInterfaceCount;       // Offset:  336 Size:     4 [unused]
//   uint ComponentBufferSizeRead;      // Offset:  340 Size:     4
//   uint ComponentBufferSizeWrite;     // Offset:  344 Size:     4
//   int NumEventsPerParticle;          // Offset:  348 Size:     4 [unused]
//   int NumParticlesPerEvent;          // Offset:  352 Size:     4 [unused]
//   uint CopyInstancesBeforeStart;     // Offset:  356 Size:     4 [unused]
//   uint SimStart;                     // Offset:  360 Size:     4 [unused]
//   uint ReadInstanceCountOffset;      // Offset:  364 Size:     4
//   uint WriteInstanceCountOffset;     // Offset:  368 Size:     4
//   float MinTime_Emitter_Value_ScaleFactor_FloatCurve;// Offset:  372 Size:     4
//   float MaxTime_Emitter_Value_ScaleFactor_FloatCurve;// Offset:  376 Size:     4 [unused]
//   float InvTimeRange_Emitter_Value_ScaleFactor_FloatCurve;// Offset:  380 Size:     4
//   float CurveLUTNumMinusOne_Emitter_Value_ScaleFactor_FloatCurve;// Offset:  384 Size:     4
//   float MinTime_Emitter_Color_ColorCurve;// Offset:  388 Size:     4 [unused]
//   float MaxTime_Emitter_Color_ColorCurve;// Offset:  392 Size:     4 [unused]
//   float InvTimeRange_Emitter_Color_ColorCurve;// Offset:  396 Size:     4 [unused]
//   float CurveLUTNumMinusOne_Emitter_Color_ColorCurve;// Offset:  400 Size:     4 [unused]
//   float2 Dimensions_Emitter_Volume;  // Offset:  404 Size:     8 [unused]
//
// }
//
// cbuffer FNiagaraGlobalParameters
// {
//
//   float Engine_DeltaTime;            // Offset:    0 Size:     4
//   float Engine_InverseDeltaTime;     // Offset:    4 Size:     4
//   float Engine_Time;                 // Offset:    8 Size:     4 [unused]
//   float Engine_RealTime;             // Offset:   12 Size:     4 [unused]
//
// }
//
// cbuffer FNiagaraSystemParameters
// {
//
//   float Engine_Owner_TimeSinceRendered;// Offset:    0 Size:     4 [unused]
//   float Engine_Owner_LODDistance;    // Offset:    4 Size:     4 [unused]
//   float Engine_Owner_LODDistanceFraction;// Offset:    8 Size:     4 [unused]
//   float Engine_System_Age;           // Offset:   12 Size:     4 [unused]
//   int Engine_Owner_ExecutionState;   // Offset:   16 Size:     4 [unused]
//   int Engine_System_TickCount;       // Offset:   20 Size:     4
//   int Engine_System_NumEmitters;     // Offset:   24 Size:     4 [unused]
//   int Engine_System_NumEmittersAlive;// Offset:   28 Size:     4 [unused]
//
// }
//
// cbuffer FNiagaraOwnerParameters
// {
//
//   row_major float4x4 Engine_Owner_SystemLocalToWorld;// Offset:    0 Size:    64
//   row_major float4x4 Engine_Owner_SystemWorldToLocal;// Offset:   64 Size:    64 [unused]
//   row_major float4x4 Engine_Owner_SystemLocalToWorldTransposed;// Offset:  128 Size:    64 [unused]
//   row_major float4x4 Engine_Owner_SystemWorldToLocalTransposed;// Offset:  192 Size:    64 [unused]
//   row_major float4x4 Engine_Owner_SystemLocalToWorldNoScale;// Offset:  256 Size:    64 [unused]
//   row_major float4x4 Engine_Owner_SystemWorldToLocalNoScale;// Offset:  320 Size:    64 [unused]
//   float4 Engine_Owner_Rotation;      // Offset:  384 Size:    16 [unused]
//   float4 Engine_Owner_Position;      // Offset:  400 Size:    16
//   float4 Engine_Owner_Velocity;      // Offset:  416 Size:    16 [unused]
//   float4 Engine_Owner_SystemXAxis;   // Offset:  432 Size:    16 [unused]
//   float4 Engine_Owner_SystemYAxis;   // Offset:  448 Size:    16 [unused]
//   float4 Engine_Owner_SystemZAxis;   // Offset:  464 Size:    16 [unused]
//   float4 Engine_Owner_Scale;         // Offset:  480 Size:    16 [unused]
//
// }
//
// cbuffer FNiagaraEmitterParameters
// {
//
//   int Engine_Emitter_NumParticles;   // Offset:    0 Size:     4 [unused]
//   int Engine_Emitter_TotalSpawnedParticles;// Offset:    4 Size:     4
//   float Engine_Emitter_SpawnCountScale;// Offset:    8 Size:     4 [unused]
//   float Emitter_Age;                 // Offset:   12 Size:     4 [unused]
//   int Emitter_RandomSeed;            // Offset:   16 Size:     4 [unused]
//   int Engine_Emitter_PaddingInt32_0; // Offset:   20 Size:     4 [unused]
//   int Engine_Emitter_PaddingInt32_1; // Offset:   24 Size:     4 [unused]
//   int Engine_Emitter_PaddingInt32_2; // Offset:   28 Size:     4 [unused]
//
// }
//
// cbuffer FNiagaraExternalParameters
// {
//
//   float Constants_Emitter_UniformRangedFloat005_Minimum;// Offset:    0 Size:     4
//   float Constants_Emitter_UniformRangedFloat005_Maximum;// Offset:    4 Size:     4
//   int Constants_Emitter_UniformRangedFloat005_RandomSeed;// Offset:    8 Size:     4 [unused]
//   float Constants_Emitter_UniformRangedFloat_Minimum;// Offset:   12 Size:     4
//   float Constants_Emitter_UniformRangedFloat_Maximum;// Offset:   16 Size:     4
//   int Constants_Emitter_UniformRangedFloat_RandomSeed;// Offset:   20 Size:     4 [unused]
//   float Constants_Emitter_UniformRangedFloat002_Minimum;// Offset:   24 Size:     4
//   float Constants_Emitter_UniformRangedFloat002_Maximum;// Offset:   28 Size:     4
//   int Constants_Emitter_UniformRangedFloat002_RandomSeed;// Offset:   32 Size:     4 [unused]
//   float4 Constants_Emitter_InitializeParticle_Color;// Offset:   48 Size:    16 [unused]
//   float Constants_Emitter_InitializeParticle_Mass;// Offset:   64 Size:     4
//   float4 Constants_Emitter_InitializeParticle_MeshScale;// Offset:   80 Size:    16 [unused]
//   int Constants_Emitter_BoxLocation_RandomSeed;// Offset:   96 Size:     4
//   float Constants_Emitter_BoxLocation_SurfaceOnlyBandThickness;// Offset:  100 Size:     4 [unused]
//   float4 Constants_Emitter_BoxLocation_BoxSize;// Offset:  112 Size:    16
//   float4 Constants_Emitter_BoxLocation_BoxOffset;// Offset:  128 Size:    16
//   float Constants_Emitter_BoxLocation_NormalizedBoxRotationAngle;// Offset:  144 Size:     4 [unused]
//   float4 Constants_Emitter_BoxLocation_RotateBoxOnAxis;// Offset:  160 Size:    16 [unused]
//   int Constants_Emitter_BoxLocation_SpawnGroupMask;// Offset:  176 Size:     4 [unused]
//   float Constants_Emitter_DragForce_Drag;// Offset:  180 Size:     4
//   float Constants_Emitter_FloatFromCurve_ScaleCurve;// Offset:  184 Size:     4
//   float4 Constants_Emitter_Color_ScaleColor;// Offset:  192 Size:    16 [unused]
//   float Constants_Emitter_Color_ScaleAlpha;// Offset:  208 Size:     4 [unused]
//   float Emitter_AlphaScale;          // Offset:  212 Size:     4 [unused]
//   float Constants_Emitter_SolveForcesAndVelocity_SpeedLimit;// Offset:  216 Size:     4 [unused]
//   float Constants_Emitter_SolveForcesAndVelocity_AccelerationLimit;// Offset:  220 Size:     4 [unused]
//   float4 Constants_Emitter_VolumeVelocityAdvect_NumberofFramesXY;// Offset:  224 Size:    16
//   float4 Constants_Emitter_VolumeVelocityAdvect_UVWScale;// Offset:  240 Size:    16
//   float Constants_Emitter_VolumeVelocityAdvect_MipLevel;// Offset:  256 Size:     4
//   float Constants_Emitter_VolumeVelocityAdvect_FrameRate;// Offset:  260 Size:     4
//   float Constants_Emitter_VolumeVelocityAdvect_VelocityBrightness;// Offset:  264 Size:     4
//   float Emitter_SpawnRate;           // Offset:  268 Size:     4 [unused]
//
// }
//
// cbuffer PREV_FNiagaraOwnerParameters
// {
//
//   row_major float4x4 PREV_Engine_Owner_SystemLocalToWorld;// Offset:    0 Size:    64 [unused]
//   row_major float4x4 PREV_Engine_Owner_SystemWorldToLocal;// Offset:   64 Size:    64 [unused]
//   row_major float4x4 PREV_Engine_Owner_SystemLocalToWorldTransposed;// Offset:  128 Size:    64 [unused]
//   row_major float4x4 PREV_Engine_Owner_SystemWorldToLocalTransposed;// Offset:  192 Size:    64 [unused]
//   row_major float4x4 PREV_Engine_Owner_SystemLocalToWorldNoScale;// Offset:  256 Size:    64 [unused]
//   row_major float4x4 PREV_Engine_Owner_SystemWorldToLocalNoScale;// Offset:  320 Size:    64 [unused]
//   float4 PREV_Engine_Owner_Rotation; // Offset:  384 Size:    16 [unused]
//   float4 PREV_Engine_Owner_Position; // Offset:  400 Size:    16
//   float4 PREV_Engine_Owner_Velocity; // Offset:  416 Size:    16 [unused]
//   float4 PREV_Engine_Owner_SystemXAxis;// Offset:  432 Size:    16 [unused]
//   float4 PREV_Engine_Owner_SystemYAxis;// Offset:  448 Size:    16 [unused]
//   float4 PREV_Engine_Owner_SystemZAxis;// Offset:  464 Size:    16 [unused]
//   float4 PREV_Engine_Owner_Scale;    // Offset:  480 Size:    16 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// Sampler_Emitter_Volume            sampler      NA          NA             s0      1 
// InputFloat                        texture   float         buf             t0      1 
// InputInt                          texture    sint         buf             t1      1 
// CurveLUT_Emitter_Value_ScaleFactor_FloatCurve    texture   float         buf             t2      1 
// Texture_Emitter_Volume            texture  float4          2d             t3      1 
// RWOutputInt                           UAV    sint         buf             u0      1 
// RWOutputFloat                         UAV   float         buf             u1      1 
// RWInstanceCounts                      UAV    uint         buf             u2      1 
// $Globals                          cbuffer      NA          NA            cb0      1 
// FNiagaraGlobalParameters          cbuffer      NA          NA            cb1      1 
// FNiagaraSystemParameters          cbuffer      NA          NA            cb2      1 
// FNiagaraOwnerParameters           cbuffer      NA          NA            cb3      1 
// FNiagaraEmitterParameters         cbuffer      NA          NA            cb4      1 
// FNiagaraExternalParameters        cbuffer      NA          NA            cb5      1 
// PREV_FNiagaraOwnerParameters      cbuffer      NA          NA            cb6      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
cs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[25], dynamicIndexed
dcl_constantbuffer CB1[1], immediateIndexed
dcl_constantbuffer CB2[2], immediateIndexed
dcl_constantbuffer CB3[26], immediateIndexed
dcl_constantbuffer CB4[1], immediateIndexed
dcl_constantbuffer CB5[17], immediateIndexed
dcl_constantbuffer CB6[26], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_buffer (float,float,float,float) t0
dcl_resource_buffer (sint,sint,sint,sint) t1
dcl_resource_buffer (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_uav_typed_buffer (sint,sint,sint,sint) u0
dcl_uav_typed_buffer (float,float,float,float) u1
dcl_uav_typed_buffer (uint,uint,uint,uint) u2
dcl_input vThreadIDInGroup.x
dcl_input vThreadID.x
dcl_temps 13
dcl_tgsm_structured g0, 4, 32
dcl_tgsm_structured g1, 4, 8
dcl_tgsm_structured g2, 4, 2
dcl_tgsm_raw g3, 4
dcl_thread_group 32, 1, 1
iadd r0.x, vThreadID.x, cb0[20].y
ieq r0.y, cb0[22].w, l(-1)
ld_uav_typed_indexable(buffer)(uint,uint,uint,uint) r0.z, cb0[22].wwww, u2.yzxw
movc r0.y, r0.y, l(0), r0.z
iadd r0.z, r0.y, cb0[20].x
iadd r0.z, r0.z, cb0[20].y
ult r0.zw, r0.xxxx, r0.zzzy
and r0.w, r0.z, r0.w
if_nz r0.w
  ld_indexable(buffer)(float,float,float,float) r0.w, r0.xxxx, t0.yzwx
  imad r1.xyzw, l(5, 6, 7, 9), cb0[21].yyyy, r0.xxxx
  ld_indexable(buffer)(float,float,float,float) r2.x, r1.xxxx, t0.xyzw
  ld_indexable(buffer)(float,float,float,float) r2.y, r1.yyyy, t0.yxzw
  ld_indexable(buffer)(float,float,float,float) r1.x, r1.zzzz, t0.xyzw
  ishl r1.y, cb0[21].y, l(3)
  iadd r1.y, r0.x, r1.y
  ld_indexable(buffer)(float,float,float,float) r1.y, r1.yyyy, t0.yxzw
  ld_indexable(buffer)(float,float,float,float) r1.z, r1.wwww, t0.yzxw
  imad r3.xyzw, l(11, 12, 13, 17), cb0[21].yyyy, r0.xxxx
  ld_indexable(buffer)(float,float,float,float) r4.x, r3.xxxx, t0.xyzw
  ld_indexable(buffer)(float,float,float,float) r4.y, r3.yyyy, t0.yxzw
  ld_indexable(buffer)(float,float,float,float) r4.z, r3.zzzz, t0.yzxw
  ld_indexable(buffer)(float,float,float,float) r1.w, r3.wwww, t0.yzwx
  imad r3.xyzw, l(18, 19, 20, 21), cb0[21].yyyy, r0.xxxx
  ld_indexable(buffer)(float,float,float,float) r2.z, r3.xxxx, t0.yzxw
  ld_indexable(buffer)(float,float,float,float) r2.w, r3.yyyy, t0.yzwx
  ld_indexable(buffer)(float,float,float,float) r3.x, r3.zzzz, t0.xyzw
  ld_indexable(buffer)(float,float,float,float) r3.y, r3.wwww, t0.yxzw
  imad r5.xyzw, l(22, 23, 26, 27), cb0[21].yyyy, r0.xxxx
  ld_indexable(buffer)(float,float,float,float) r3.z, r5.xxxx, t0.yzxw
  ld_indexable(buffer)(float,float,float,float) r3.w, r5.yyyy, t0.yzwx
  ld_indexable(buffer)(sint,sint,sint,sint) r4.w, r0.xxxx, t1.yzwx
  ld_indexable(buffer)(float,float,float,float) r5.x, r5.zzzz, t0.xyzw
  ld_indexable(buffer)(float,float,float,float) r5.y, r5.wwww, t0.yxzw
  imad r5.w, l(28), cb0[21].y, r0.x
  ld_indexable(buffer)(float,float,float,float) r5.z, r5.wwww, t0.yzxw
  add r0.w, r0.w, cb1[0].x
  max r5.w, r1.x, l(0.000010)
  add r6.x, r5.w, l(-0.000100)
  lt r6.x, r0.w, r6.x
  div r5.w, r0.w, r5.w
  mul r6.y, r1.y, -cb5[11].y
  mul r6.yzw, r5.xxyz, r6.yyyy
  add r7.x, r5.w, -cb0[23].y
  mul_sat r7.x, r7.x, cb0[23].w
  mul r7.y, r7.x, cb0[24].x
  round_ni r7.y, r7.y
  lt r7.z, r7.y, cb0[24].x
  add r7.w, r7.y, l(1.000000)
  movc r7.z, r7.z, r7.w, r7.y
  mad r7.x, r7.x, cb0[24].x, -r7.y
  ftou r7.y, r7.y
  ld_indexable(buffer)(float,float,float,float) r7.y, r7.yyyy, t2.yxzw
  ftou r7.z, r7.z
  ld_indexable(buffer)(float,float,float,float) r7.z, r7.zzzz, t2.yzxw
  add r7.z, -r7.y, r7.z
  mad r7.x, r7.x, r7.z, r7.y
  mul r7.x, r7.x, cb5[11].z
  mul r7.xy, r7.xxxx, r2.xyxx
  max r7.z, r1.y, l(0.000100)
  div r7.z, l(1.000000, 1.000000, 1.000000, 1.000000), r7.z
  mul r6.yzw, r6.yyzw, r7.zzzz
  mad r5.xyz, r6.yzwy, cb1[0].xxxx, r5.xyzx
  mad r4.xyz, r5.xyzx, cb1[0].xxxx, r4.xyzx
  mul r6.y, cb5[14].y, cb5[14].x
  add r8.xyz, r4.xyzx, l(-128.000000, -128.000000, -128.000000, 0.000000)
  div r8.xyz, r8.xyzx, cb5[15].xyzx
  div r6.z, l(0.500000), r6.y
  add r6.z, -r6.z, r8.z
  mul r6.y, r6.y, r6.z
  round_ni r6.z, r6.y
  frc r6.y, r6.y
  frc r7.zw, r8.xxxy
  div r7.zw, r7.zzzw, cb5[14].xxxy
  div r6.w, r6.z, cb5[14].x
  round_ni r8.y, r6.w
  mad r8.x, -cb5[14].x, r8.y, r6.z
  div r8.xy, r8.xyxx, cb5[14].xyxx
  add r6.z, r6.z, l(1.000000)
  div r6.w, r6.z, cb5[14].x
  round_ni r9.y, r6.w
  mad r9.x, -cb5[14].x, r9.y, r6.z
  div r6.zw, r9.xxxy, cb5[14].xxxy
  add r8.xy, r7.zwzz, r8.xyxx
  add r6.zw, r6.zzzw, r7.zzzw
  sample_l_indexable(texture2d)(float,float,float,float) r8.xyzw, r8.xyxx, t3.xyzw, s0, cb5[16].x
  sample_l_indexable(texture2d)(float,float,float,float) r9.xyzw, r6.zwzz, t3.xyzw, s0, cb5[16].x
  add r9.xyzw, -r8.xyzw, r9.xyzw
  mad r8.xyzw, r6.yyyy, r9.xyzw, r8.xyzw
  eq r6.y, |r8.z|, l(0.000000)
  eq r6.z, r8.w, l(1.000000)
  or r6.y, r6.z, r6.y
  add r4.xyz, r4.xyzx, l(128.000000, 128.000000, 128.000000, 0.000000)
  div r4.xyz, r4.xyzx, cb5[15].xyzx
  frc r4.xyz, r4.xyzx
  add r4.xyz, r4.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
  mul r4.xyz, r4.xyzx, cb5[15].xyzx
  movc r4.xyz, r6.yyyy, r3.xyzx, r4.xyzx
  mul r6.z, |r8.z|, cb5[16].z
  movc r6.y, r6.y, l(0), r6.z
  div r8.xyz, r8.xyzx, cb5[16].yyyy
  div r8.xyz, r8.xyzx, cb1[0].xxxx
  mov r6.zw, r6.yyyy
  mov r7.z, r6.y
else 
  uge r7.w, r0.x, r0.y
  and r0.z, r0.z, r7.w
  if_nz r0.z
    iadd r0.x, -r0.y, r0.x
    ige r9.xyzw, r0.xxxx, cb0[10].xyzw
    and r9.xyzw, r9.xyzw, l(1, 1, 1, 1)
    iadd r0.y, r9.y, r9.x
    iadd r0.y, r9.z, r0.y
    iadd r0.y, r9.w, r0.y
    ige r9.xyzw, r0.xxxx, cb0[11].xyzw
    and r9.xyzw, r9.xyzw, l(1, 1, 1, 1)
    iadd r0.z, r9.y, r9.x
    iadd r0.z, r9.z, r0.z
    iadd r0.z, r9.w, r0.z
    iadd r0.y, r0.z, r0.y
    iadd r0.x, r0.x, -cb0[r0.y + 12].w
    iadd r4.w, r0.x, cb4[0].y
    itof r0.x, r0.x
    mad r0.x, cb0[r0.y + 12].x, r0.x, cb0[r0.y + 12].y
    add r0.w, -r0.x, cb1[0].x
    mul r0.x, r0.x, cb1[0].y
    add r9.xyz, cb3[25].xyzx, -cb6[25].xyzx
    mad r0.xyz, r0.xxxx, r9.xyzx, cb6[25].xyzx
    add r7.w, -cb5[0].x, cb5[0].y
    imul null, r9.x, vThreadID.x, l(0x0019660d)
    imul null, r9.y, cb0[9].z, l(0x0019660d)
    iadd r9.xy, r9.xyxx, l(0x3c6ef35f, 0x3c6ef35f, 0, 0)
    imad r10.xyzw, r9.xxxx, r9.xxxx, l(0x3c3c2745, 0x3c22c138, 0x3c095b2b, 0x3beff51e)
    imad r11.xyzw, r9.yyyy, r10.xyzw, r9.xxxx
    imad r12.xyzw, r10.xyzw, r11.xyzw, r9.yyyy
    imad r9.xyzw, r11.xyzw, r12.xyzw, r9.xxxx
    imad r9.xyzw, r11.xyzw, r9.xyzw, r10.xyzw
    ishr r9.xyzw, r9.xyzw, l(8, 8, 8, 8)
    and r9.xyzw, r9.xyzw, l(0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff)
    utof r9.xyzw, r9.xyzw
    mul r7.w, r7.w, r9.x
    mad r7.w, r7.w, l(0.000000), cb5[0].x
    add r8.w, -cb5[0].w, cb5[1].x
    mul r8.w, r8.w, r9.y
    mad r2.y, r8.w, l(0.000000), cb5[0].w
    add r8.w, -cb5[1].z, cb5[1].w
    mul r8.w, r8.w, r9.z
    mad r1.x, r8.w, l(0.000000), cb5[1].z
    mul r3.w, r7.w, l(360.000000)
    mul r1.z, r9.w, l(0.000000)
    bfi r7.w, l(16), l(16), cb5[6].x, l(5)
    imul null, r9.x, r4.w, l(0x0019660d)
    imul null, r9.y, cb2[1].y, l(0x0019660d)
    imul null, r9.z, r7.w, l(0x0019660d)
    iadd r9.xyz, r9.xyzx, l(0x3c6ef35f, 0x3c6ef35f, 0x3c6ef35f, 0)
    imad r7.w, r9.y, r9.z, r9.x
    imad r8.w, r9.z, r7.w, r9.y
    imad r9.x, r7.w, r8.w, r9.z
    imad r10.x, r8.w, r9.x, r7.w
    imad r10.y, r9.x, r10.x, r8.w
    imad r10.z, r10.x, r10.y, r9.x
    ishr r9.xyz, r10.xyzx, l(8, 8, 8, 0)
    and r9.xyz, r9.xyzx, l(0x00ffffff, 0x00ffffff, 0x00ffffff, 0)
    utof r9.xyz, r9.xyzx
    mul r9.xyz, r9.xyzx, cb5[7].xyzx
    mul r9.xyz, r9.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
    mad r9.xyz, cb5[7].xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000), r9.xyzx
    add r9.xyz, r9.xyzx, cb5[8].xyzx
    mul r10.xyz, r9.yyyy, cb3[1].xyzx
    mad r9.xyw, r9.xxxx, cb3[0].xyxz, r10.xyxz
    mad r9.xyz, r9.zzzz, cb3[2].xyzx, r9.xywx
    add r3.xyz, r0.xyzx, r9.xyzx
    max r0.x, r1.x, l(0.000010)
    add r0.y, r0.x, l(-0.000100)
    lt r6.x, r0.w, r0.y
    div r5.w, r0.w, r0.x
    add r0.x, r5.w, -cb0[23].y
    mul_sat r0.x, r0.x, cb0[23].w
    mul r0.y, r0.x, cb0[24].x
    round_ni r0.y, r0.y
    lt r0.z, r0.y, cb0[24].x
    add r7.w, r0.y, l(1.000000)
    movc r0.z, r0.z, r7.w, r0.y
    mad r0.x, r0.x, cb0[24].x, -r0.y
    ftou r0.y, r0.y
    ld_indexable(buffer)(float,float,float,float) r0.y, r0.yyyy, t2.yxzw
    ftou r0.z, r0.z
    ld_indexable(buffer)(float,float,float,float) r0.z, r0.zzzz, t2.yzxw
    add r0.z, -r0.y, r0.z
    mad r0.x, r0.x, r0.z, r0.y
    mul r0.x, r0.x, cb5[11].z
    mul r7.y, r0.x, r2.y
    mul r0.x, cb5[14].y, cb5[14].x
    add r9.xyz, r3.xyzx, l(-128.000000, -128.000000, -128.000000, 0.000000)
    div r9.xyz, r9.xyzx, cb5[15].xyzx
    div r0.y, l(0.500000), r0.x
    add r0.y, -r0.y, r9.z
    mul r0.x, r0.x, r0.y
    round_ni r0.y, r0.x
    frc r0.x, r0.x
    frc r9.xy, r9.xyxx
    div r9.xy, r9.xyxx, cb5[14].xyxx
    div r0.z, r0.y, cb5[14].x
    round_ni r10.y, r0.z
    mad r10.x, -cb5[14].x, r10.y, r0.y
    div r9.zw, r10.xxxy, cb5[14].xxxy
    add r0.y, r0.y, l(1.000000)
    div r0.z, r0.y, cb5[14].x
    round_ni r10.y, r0.z
    mad r10.x, -cb5[14].x, r10.y, r0.y
    div r0.yz, r10.xxyx, cb5[14].xxyx
    add r9.zw, r9.zzzw, r9.xxxy
    add r0.yz, r0.yyzy, r9.xxyx
    sample_l_indexable(texture2d)(float,float,float,float) r9.xyzw, r9.zwzz, t3.xyzw, s0, cb5[16].x
    sample_l_indexable(texture2d)(float,float,float,float) r10.xyzw, r0.yzyy, t3.xyzw, s0, cb5[16].x
    add r10.xyzw, -r9.xyzw, r10.xyzw
    mad r9.xyzw, r0.xxxx, r10.xyzw, r9.xyzw
    eq r0.x, |r9.z|, l(0.000000)
    eq r0.y, r9.w, l(1.000000)
    or r0.x, r0.y, r0.x
    add r10.xyz, r3.xyzx, l(128.000000, 128.000000, 128.000000, 0.000000)
    div r10.xyz, r10.xyzx, cb5[15].xyzx
    frc r10.xyz, r10.xyzx
    add r10.xyz, r10.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
    mul r10.xyz, r10.xyzx, cb5[15].xyzx
    movc r4.xyz, r0.xxxx, r3.xyzx, r10.xyzx
    mul r0.y, |r9.z|, cb5[16].z
    movc r6.y, r0.x, l(0), r0.y
    div r0.xyz, r9.xyzx, cb5[16].yyyy
    div r8.xyz, r0.xyzx, r0.wwww
    mov r6.zw, r6.yyyy
    mov r7.z, r6.y
    mov r2.x, r2.y
    mov r1.y, cb5[4].x
    mov r1.w, l(1.000000)
    mov r2.zw, l(0,0,1.000000,1.000000)
    mov r7.x, r7.y
  else 
    mov r0.w, l(0)
    mov r5.w, l(0)
    mov r1.xyzw, l(0,0,0,0)
    mov r2.xyzw, l(0,0,0,0)
    mov r3.xyzw, l(0,0,0,0)
    mov r7.xyz, l(0,0,0,0)
    mov r4.xyzw, l(0,0,0,0)
    mov r8.xyz, l(0,0,0,0)
    mov r6.xyzw, l(0,0,0,0)
  endif 
  mov r5.xyz, l(0,0,0,0)
endif 
and r0.x, r6.x, l(1)
store_structured g0.x, vThreadIDInGroup.x, l(0), r0.x
sync_g_t
and r0.yz, vThreadIDInGroup.xxxx, l(0, 3, 15, 0)
if_z r0.y
  iadd r9.xyz, vThreadIDInGroup.xxxx, l(1, 2, 3, 0)
  ld_structured r0.y, r9.x, l(0), g0.xxxx
  iadd r0.y, r0.y, r0.x
  ld_structured r7.w, r9.y, l(0), g0.xxxx
  iadd r7.w, r0.y, r7.w
  ld_structured r8.w, r9.z, l(0), g0.xxxx
  iadd r8.w, r7.w, r8.w
  store_structured g0.x, vThreadIDInGroup.x, l(0), l(0)
  store_structured g0.x, r9.x, l(0), r0.x
  store_structured g0.x, r9.y, l(0), r0.y
  store_structured g0.x, r9.z, l(0), r7.w
  ushr r0.x, vThreadIDInGroup.x, l(2)
  store_structured g1.x, r0.x, l(0), r8.w
endif 
sync_g_t
if_z r0.z
  ushr r0.x, vThreadIDInGroup.x, l(2)
  ld_structured r0.y, r0.x, l(0), g1.xxxx
  iadd r9.xyz, r0.xxxx, l(1, 2, 3, 0)
  ld_structured r0.z, r9.x, l(0), g1.xxxx
  iadd r0.z, r0.z, r0.y
  ld_structured r7.w, r9.y, l(0), g1.xxxx
  iadd r7.w, r0.z, r7.w
  ld_structured r8.w, r9.z, l(0), g1.xxxx
  iadd r8.w, r7.w, r8.w
  store_structured g1.x, r0.x, l(0), l(0)
  store_structured g1.x, r9.x, l(0), r0.y
  store_structured g1.x, r9.y, l(0), r0.z
  store_structured g1.x, r9.z, l(0), r7.w
  ushr r0.x, r0.x, l(2)
  store_structured g2.x, r0.x, l(0), r8.w
endif 
sync_g_t
if_z vThreadIDInGroup.x
  ld_structured r0.x, l(0), l(0), g2.xxxx
  ld_structured r0.y, l(1), l(0), g2.xxxx
  iadd r0.y, r0.y, r0.x
  store_structured g2.x, l(0), l(0), l(0)
  store_structured g2.x, l(1), l(0), r0.x
  imm_atomic_iadd r9.x, u2, cb0[23].x, r0.y
  store_raw g3.x, l(0), r9.x
endif 
sync_g_t
if_nz r6.x
  ld_raw r0.x, l(0), g3.xxxx
  ushr r0.yz, vThreadIDInGroup.xxxx, l(0, 4, 2, 0)
  ld_structured r0.y, r0.y, l(0), g2.xxxx
  iadd r0.x, r0.y, r0.x
  ld_structured r0.y, r0.z, l(0), g1.xxxx
  iadd r0.x, r0.y, r0.x
  ld_structured r0.y, vThreadIDInGroup.x, l(0), g0.xxxx
  iadd r0.x, r0.y, r0.x
  iadd r0.y, r0.x, cb0[20].y
  store_uav_typed u1.xyzw, r0.yyyy, r0.wwww
  iadd r0.z, r0.x, cb0[21].z
  iadd r0.z, r0.z, cb0[20].y
  store_uav_typed u1.xyzw, r0.zzzz, r6.zzzz
  ishl r9.xyzw, cb0[21].zzzz, l(1, 2, 3, 4)
  iadd r9.xyzw, r0.xxxx, r9.xyzw
  iadd r9.xyzw, r9.xyzw, cb0[20].yyyy
  store_uav_typed u1.xyzw, r9.xxxx, r6.wwww
  imad r10.xyzw, l(3, 5, 6, 7), cb0[21].zzzz, r0.xxxx
  iadd r10.xyzw, r10.xyzw, cb0[20].yyyy
  store_uav_typed u1.xyzw, r10.xxxx, r7.zzzz
  store_uav_typed u1.xyzw, r9.yyyy, r6.yyyy
  store_uav_typed u1.xyzw, r10.yyyy, r2.xxxx
  store_uav_typed u1.xyzw, r10.zzzz, r2.yyyy
  store_uav_typed u1.xyzw, r10.wwww, r1.xxxx
  store_uav_typed u1.xyzw, r9.zzzz, r1.yyyy
  imad r6.xyzw, l(9, 10, 11, 12), cb0[21].zzzz, r0.xxxx
  iadd r6.xyzw, r6.xyzw, cb0[20].yyyy
  store_uav_typed u1.xyzw, r6.xxxx, r1.zzzz
  store_uav_typed u1.xyzw, r6.yyyy, r5.wwww
  store_uav_typed u1.xyzw, r6.zzzz, r4.xxxx
  store_uav_typed u1.xyzw, r6.wwww, r4.yyyy
  imad r6.xyzw, l(13, 14, 15, 17), cb0[21].zzzz, r0.xxxx
  iadd r6.xyzw, r6.xyzw, cb0[20].yyyy
  store_uav_typed u1.xyzw, r6.xxxx, r4.zzzz
  store_uav_typed u1.xyzw, r6.yyyy, r5.xxxx
  store_uav_typed u1.xyzw, r6.zzzz, r5.yyyy
  store_uav_typed u1.xyzw, r9.wwww, r5.zzzz
  store_uav_typed u1.xyzw, r6.wwww, r1.wwww
  imad r1.xyzw, l(18, 19, 20, 21), cb0[21].zzzz, r0.xxxx
  iadd r1.xyzw, r1.xyzw, cb0[20].yyyy
  store_uav_typed u1.xyzw, r1.xxxx, r2.zzzz
  store_uav_typed u1.xyzw, r1.yyyy, r2.wwww
  store_uav_typed u1.xyzw, r1.zzzz, r3.xxxx
  store_uav_typed u1.xyzw, r1.wwww, r3.yyyy
  imad r1.xyzw, l(22, 23, 24, 25), cb0[21].zzzz, r0.xxxx
  iadd r1.xyzw, r1.xyzw, cb0[20].yyyy
  store_uav_typed u1.xyzw, r1.xxxx, r3.zzzz
  store_uav_typed u1.xyzw, r1.yyyy, r3.wwww
  store_uav_typed u1.xyzw, r1.zzzz, r7.xxxx
  store_uav_typed u1.xyzw, r1.wwww, r7.yyyy
  store_uav_typed u0.xyzw, r0.yyyy, r4.wwww
  imad r0.xyz, l(26, 27, 28, 0), cb0[21].zzzz, r0.xxxx
  iadd r0.xyz, r0.xyzx, cb0[20].yyyy
  store_uav_typed u1.xyzw, r0.xxxx, r8.xxxx
  store_uav_typed u1.xyzw, r0.yyyy, r8.yyyy
  store_uav_typed u1.xyzw, r0.zzzz, r8.zzzz
endif 
ret 
// Approximately 357 instruction slots used
